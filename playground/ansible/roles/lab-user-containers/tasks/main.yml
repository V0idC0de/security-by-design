---
- name: Fail if container_state input is invalid
  ansible.builtin.fail:
    msg: "container_state must be one of: present, started, stopped, absent, restarted"
  when: container_state not in ['present', 'started', 'stopped', 'absent', 'restarted']

- name: Set container name for each lab user
  set_fact:
    container_names: >-
      {{
        container_names | default({}) | combine({
          item: 'lab-{}-{}'.format(
            item,
            (container_image | regex_search("\/?([^:\/]+):?[\w\.\-]*$", "\1") | first)
          )
        })
      }}
  loop: "{{ container_users }}"

- name: Set container hostnames for each lab user
  set_fact:
    container_hostnames: >-
      {{
        container_names | default({}) | combine({
          item: (
            container_image 
            | regex_search("\/?([^:\/]+):?[\w\.\-]*$", "\1")
            | first
          )
        })
      }}
  loop: "{{ container_users }}"

- name: "Set Containers for Lab {{ container_image }} to {{ container_state }}"
  community.docker.docker_container:
    name: "{{ item.value }}"
    image: "{{ container_image }}"
    state: "{{ container_state }}"
    hostname: "{{ container_hostnames[item.key] }}"
    # Start Containers with "sleep infinity" to keep them running but idle.
    # Lab users are able to "docker exec" into their Containers.
    entrypoint:
      - sleep
      - infinity
    # Faster exits, if stops are required.
    force_kill: true
  loop: "{{ container_names | dict2items }}"
  loop_control:
    label: "{{ item.key }} ({{ item.value }})"
